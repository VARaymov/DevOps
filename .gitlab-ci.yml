stages:
  - build
  - test
  - notify
include:
  - template: Security/SAST.gitlab-ci.yml

sportbugs-sast:
  stage: test
  variables:
    COMPILE: "false"
    SAST_JAVA_VERSION: 16
    MAVEN_REPO_PATH: ${CI_PROJECT_DIR}/.m2/repository
   script:
     - echo "Все ок"
  artifacts:
    paths:
      - backend/target/java/sausage-store-0.0.1-SNAPSHOT.jar

sonarqube-backend-sast:
  stage: test
  only:
    changes:
      - backend/*
  image: maven:3.8-openjdk-16
  script:
    - cd backend
    - >
      mvn verify sonar:sonar -Dsonar.qualitygate.wait=true
      -Dsonar.projectKey=${SONAR_PROJECT_KEY_BACKEND}
      -Dsonar.host.url=${SONARQUBE_URL_BACKEND}
      -Dsonar.login=${SONAR_LOGIN_BACKEND}
      -Dsonar.projectName="19_RAYUMOVVALERY_BACKEND"
  needs:
    - build-backend-code-job


sonarqube-frontend-sast:
  stage: test
  only:
    changes:
      - frontend/*
  image: sonarsource/sonar-scanner-cli
  script:
    - cd frontend
    - >
      sonar-scanner -Dsonar.qualitygate.wait=true
      -Dsonar.projectKey=${SONAR_PROJECT_KEY_FRONTEND} 
      -Dsonar.sources=.
      -Dsonar.host.url=${SONARQUBE_URL_FRONTEND} 
      -Dsonar.login=${SONAR_LOGIN_FRONTEND}
      -Dsonar.projectName="19_RAYUMOVVALERY_FRONTEND"
  needs:
    - build-frontend-code-job


build-backend-code-job:
  stage: build
  only:
    changes:
      - backend/*
  script:
    - echo "BACKEND_JOB=$CI_JOB_ID" >> backend.env
    - cd backend
    - mvn package -Dmaven.repo.local='$CI_PROJECT_DIR'/.m2/repository
    - cd target
    - mkdir java
    - mv sausage-store-0.0.1-SNAPSHOT.jar java
  artifacts:
    paths:
      - backend/target/java/sausage-store-0.0.1-SNAPSHOT.jar
    reports:
      dotenv: backend.env

build-frontend-code-job:
  stage: build
  only:
    changes:
      - frontend/*
  before_script:
    - echo "FRONTEND_JOB=$CI_JOB_ID" >> frontend.env
  script:
    - cd frontend
    - npm install
    - npm run build
  artifacts:
    paths:
      - frontend/dist/frontend
    reports:
      dotenv: frontend.env

telegram-notification-backend:
  stage: notify
  script:
    - curl -X POST -H "Content-type:application/json" --data '{"chat_id":"-1001634310929", "text":"Валерий собрал бекенд. Артефакт можно посмотреть по ссылке  https://gitlab.praktikum-services.ru/std-019-002/sausage-store/-/jobs/'$BACKEND_JOB'/artifacts/browse/backend/target/java"}' "https://api.telegram.org/bot5933756043:AAE8JLL5KIzgrNBeTP5e-1bkbJy4YRoeGjs/sendMessage"
  needs:
    - build-backend-code-job
  rules:
    - if: $CI_COMMIT_MESSAGE =~ "/send notification/"
      changes:
        paths:
          - "backend/*"

telegram-notification-frontend:
  stage: notify
  variables:
    ARTIFACT_URL:
      "https://gitlab.praktikum-services.ru/std-019-002/sausage-store/-/jobs/'$FRONTEND_JOB'/artifacts/browse/frontend/dist/frontend"
  script: 
    - curl -X POST -H "Content-type:application/json" --data '{"chat_id":"-1001634310929", "text":"Валерий собрал фронтенд. Артефакт можно посмотреть по ссылке '$ARTIFACT_URL'"}' "https://api.telegram.org/bot5933756043:AAE8JLL5KIzgrNBeTP5e-1bkbJy4YRoeGjs/sendMessage"
  needs:
    - build-frontend-code-job
  rules:
    - if: $CI_COMMIT_MESSAGE =~ "/send notification/"
      changes:
        paths:
          - "frontend/*"
stages:
  - build
  - test
  - release
  - notify
include:
  - template: Security/SAST.gitlab-ci.yml

variables:
    VERSION: 1.0.${CI_PIPELINE_ID}
    MAVEN_REPO_PATH: ${CI_PROJECT_DIR}/.m2/repository

spotbugs-sast:
  stage: test
  variables:
    COMPILE: "false"
    SAST_JAVA_VERSION: 11
    MAVEN_REPO_PATH: $CI_PROJECT_DIR/backend/.m2/repository
  artifacts:
    paths:
      - backend/target/java/sausage-store-0.0.1-SNAPSHOT.jar
  needs:
    - build-backend-code-job

sonarqube-backend-sast:
  stage: test
  only:
    changes:
      - backend/*
  image: maven:3.8-openjdk-16
  script:
    - cd backend
    - >
      mvn verify sonar:sonar -Dsonar.qualitygate.wait=true
      -Dsonar.projectKey=${SONAR_PROJECT_KEY_BACKEND}
      -Dsonar.host.url=${SONARQUBE_URL_BACKEND}
      -Dsonar.login=${SONAR_LOGIN_BACKEND}
      -Dsonar.projectName="19_RAYUMOVVALERY_BACKEND"
  needs:
    - build-backend-code-job

sonarqube-frontend-sast:
  stage: test
  only:
    changes:
      - frontend/*
  image: sonarsource/sonar-scanner-cli
  script:
    - cd frontend
    - >
      sonar-scanner -Dsonar.qualitygate.wait=true
      -Dsonar.projectKey=${SONAR_PROJECT_KEY_FRONTEND} 
      -Dsonar.sources=.
      -Dsonar.host.url=${SONARQUBE_URL_FRONTEND} 
      -Dsonar.login=${SONAR_LOGIN_FRONTEND}
      -Dsonar.projectName="19_RAYUMOVVALERY_FRONTEND"
  needs:
    - build-frontend-code-job

build-backend-code-job:
  stage: build
  only:
    changes:
      - backend/*
  script:
    - echo "BACKEND_JOB=$CI_JOB_ID" >> backend.env
    - cd backend
    - mvn package -Dmaven.repo.local=${CI_PROJECT_DIR}/backend/.m2/repository -Dversion.application=${VERSION}
    - cd target
    - mkdir java
    - mv sausage-store-${VERSION}.jar java
  artifacts:
    paths:
      - backend/target/java/sausage-store-${VERSION}.jar
      - ${CI_PROJECT_DIR}/.m2/repository
      - ${CI_PROJECT_DIR}/backend/settings.xml
    reports:
      dotenv: backend.env
  cache:
    key: backend_cache
    paths:
      - ${CI_PROJECT_DIR}/.m2/repository # для хранения зависимости бекенда

upload-backend-release-job:
  stage: release
  only:
    changes:
      - backend/**/*
  needs:
    - build-backend-code-job
  script:
    - cd backend
    - mvn -Dmaven.repo.local=${CI_PROJECT_DIR}/backend/.m2/repository -s ${CI_PROJECT_DIR}/backend/settings.xml -Dversion.application=${VERSION} -DskipTests deploy
  cache:
    key: backend_cache
    paths:
      - ${CI_PROJECT_DIR}/.m2/repository # для хранения зависимости бекенда

build-frontend-code-job:
  stage: build
  only:
    changes:
      - frontend/*
  before_script:
    - echo "FRONTEND_JOB=$CI_JOB_ID" >> frontend.env
  script:
    - cd frontend
    - npm install
    - npm run build
  artifacts:
    paths:
      - frontend/dist/frontend
    reports:
      dotenv: frontend.env
  cache:
    key: frontend_cache
    paths:
      - .npm/ # для хранения зависимостей сборки фронтенда

upload-frontend-release-job:
  stage: release
  only:
    changes:
      - frontend/*
  needs:
    - build-frontend-code-job
  script:
    - cd frontend
    - tar czvf sausage-store-${VERSION}.tar.gz ${CI_PROJECT_DIR}/frontend/dist/frontend
    - curl -v -u "${NEXUS_REPO_USER}:${NEXUS_REPO_PASS}" --upload-file sausage-store-${VERSION}.tar.gz ${NEXUS_REPO_URL_FRONTEND}/sausage-store-front/sausage-store/${VERSION}/sausage-store-${VERSION}.tar.gz
  cache:
    key: frontend_cache
    paths:
      - .npm/ # для хранения зависимостей сборки фронтенда
  
telegram-notification-backend:
  stage: notify
  only:
    changes:
        - "backend/*"
  variables:
    ARTIFACT_URL:
      ${NEXUS_REPO_URL_BACKEND}
  script:
    - curl -X POST -H "Content-type:application/json" --data '{"chat_id":"-1001634310929", "text":"Вышла новая версия frontend сосисочной — '${VERSION}''. Скачать артефакт можно по ссылке — '${ARTIFACT_URL}'"}' "https://api.telegram.org/bot5933756043:AAE8JLL5KIzgrNBeTP5e-1bkbJy4YRoeGjs/sendMessage"
  needs:
    - upload-backend-release-job
  # rules:
    # - if: $CI_COMMIT_MESSAGE =~ "/send notification/"
   

telegram-notification-frontend:
  stage: notify
  only:
    changes:
    - "frontend/*"
  variables:
    ARTIFACT_URL:
      ${NEXUS_REPO_URL_FRONTEND}
  script: 
    - curl -X POST -H "Content-type:application/json" --data '{"chat_id":"-1001634310929", "text":"Вышла новая версия backend сосисочной - '${VERSION}'. Скачать артефакт можно по ссылке - '${ARTIFACT_URL}'"}' "https://api.telegram.org/bot5933756043:AAE8JLL5KIzgrNBeTP5e-1bkbJy4YRoeGjs/sendMessage"
  needs:
    - upload-frontend-release-job
  # rules:
    # - if: $CI_COMMIT_MESSAGE =~ "/send notification/"
      
stages:
  - build
  - release
  - deploy
  # - notify

variables:
  VERSION: 1.0.${CI_PIPELINE_ID}
  DEV_USER: student
  DEV_HOST: std-019-02.praktikum-services.tech

build-frontend-code-job:
  stage: build
  only:
    changes:
      - frontend/**/*
  before_script:
    - echo "FRONTEND_JOB=$CI_JOB_ID" >> frontend.env
  script:
    - cd frontend
    - npm install
    - npm run build
  artifacts:
    paths:
      - frontend/dist/frontend
    reports:
      dotenv: frontend.env
  cache:
    key: frontend_cache
    paths:
      - ${CI_PROJECT_DIR}/frontend/dist/frontend 

upload-frontend-release-job:
  stage: release
  only:
    changes:
      - frontend/**/*
  needs:
    - build-frontend-code-job
  script:
    - cd frontend
    - tar czvf sausage-store-${VERSION}.tar.gz ${CI_PROJECT_DIR}/frontend/dist/frontend
    - curl -v -u "${NEXUS_REPO_USER}:${NEXUS_REPO_PASS}" --upload-file sausage-store-${VERSION}.tar.gz ${NEXUS_REPO_URL_FRONTEND}/sausage-store-front/sausage-store/${VERSION}/sausage-store-${VERSION}.tar.gz
  cache:
    key: frontend_cache
    paths:
      - ${CI_PROJECT_DIR}/frontend/dist/frontend


deploy-frontend-job:
  stage: deploy
  needs:
    - upload-frontend-release-job
  before_script:
    - 'command -v ssh-agent >dev/null || (apt-get update -y && apt-get install openssh-client -y)'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 600 ~/.ssh
    - SSH_KNOWN_HOSTS=$(ssh-keyscan $DEV_HOST)
    - echo ${SSH_KNOWN_HOSTS} >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts    
  script:
    # выполняем простую комкнду для 
    - scp ./backend/sausage-store-backend.service ${DEV_USER}@${DEV_HOST}:/home/${DEV_USER}/sausage-store-backend.service
    - ssh ${DEV_USER}@${DEV_HOST} "export "CURRENT_VERSION=${VERSION}"; export "VERSION=${VERSION}"; export "DEV_HOST=${DEV_HOST}";export "NEXUS_REPO_URL_BACKEND=${NEXUS_REPO_URL_BACKEND}"; export "NEXUS_REPO_USER=${NEXUS_REPO_USER}"; export "NEXUS_REPO_PASS=${NEXUS_REPO_PASS}";setsid /bin/bash -s " < ./backend/deploy.sh
    

# telegram-notification-frontend:
#   stage: notify
#   only:
#     changes:
#     - "frontend/*"
#   variables:
#     ARTIFACT_URL:
#       ${NEXUS_REPO_URL_FRONTEND}/sausage-store-front/sausage-store/${VERSION}/sausage-store-${VERSION}.tar.gz
#   script: 
#     - curl -X POST -H "Content-type:application/json" --data '{"chat_id":"-1001634310929", "text":"Вышла новая версия frontend сосисочной - '${VERSION}'. Скачать артефакт можно по ссылке - '${ARTIFACT_URL}'"}' "https://api.telegram.org/bot5933756043:AAE8JLL5KIzgrNBeTP5e-1bkbJy4YRoeGjs/sendMessage"
#   needs:
#     - upload-frontend-release-job


  # rules:
    # - if: $CI_COMMIT_MESSAGE =~ "/send notification/"

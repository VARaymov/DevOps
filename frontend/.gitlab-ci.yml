stages:
  - build
  - release
  - notify

variables:
  VERSION: 1.0.${CI_PIPELINE_ID}

build-frontend-code-job:
  stage: build
  only:
    changes:
      - frontend/**/*
  before_script:
    - echo "FRONTEND_JOB=$CI_JOB_ID" >> frontend.env
  script:
    - cd frontend
    - npm install
    - npm run build
  artifacts:
    paths:
      - frontend/dist/frontend
    reports:
      dotenv: frontend.env
  cache:
    key: frontend_cache
    paths:
      - ${CI_PROJECT_DIR}/frontend/dist/frontend 

upload-frontend-release-job:
  stage: release
  only:
    changes:
      - frontend/**/*
  needs:
    - build-frontend-code-job
  script:
    - cd frontend
    - tar czvf sausage-store-${VERSION}.tar.gz ${CI_PROJECT_DIR}/frontend/dist/frontend
    - curl -v -u "${NEXUS_REPO_USER}:${NEXUS_REPO_PASS}" --upload-file sausage-store-${VERSION}.tar.gz ${NEXUS_REPO_URL_FRONTEND}/sausage-store-front/sausage-store/${VERSION}/sausage-store-${VERSION}.tar.gz
  cache:
    key: frontend_cache
    paths:
      - ${CI_PROJECT_DIR}/frontend/dist/frontend

telegram-notification-frontend:
  stage: notify
  only:
    changes:
    - "frontend/*"
  variables:
    ARTIFACT_URL:
      ${NEXUS_REPO_URL_FRONTEND}/sausage-store-front/sausage-store/${VERSION}/sausage-store-${VERSION}.tar.gz
  script: 
    - curl -X POST -H "Content-type:application/json" --data '{"chat_id":"-1001634310929", "text":"Вышла новая версия frontend сосисочной - '${VERSION}'. Скачать артефакт можно по ссылке - '${ARTIFACT_URL}'"}' "https://api.telegram.org/bot5933756043:AAE8JLL5KIzgrNBeTP5e-1bkbJy4YRoeGjs/sendMessage"
  needs:
    - upload-frontend-release-job
  # rules:
    # - if: $CI_COMMIT_MESSAGE =~ "/send notification/"
